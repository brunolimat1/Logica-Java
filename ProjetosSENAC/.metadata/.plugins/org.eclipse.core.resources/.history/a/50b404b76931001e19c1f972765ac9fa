package view;

import java.awt.Cursor;
import java.awt.Font;
import java.awt.Image;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.border.BevelBorder;
import javax.swing.border.EtchedBorder;
import javax.swing.filechooser.FileNameExtensionFilter;

import com.toedter.calendar.JDateChooser;

import model.DAO;
import javax.swing.SwingConstants;

public class Produtos extends JDialog {
	DAO dao = new DAO();
	private Connection con;
	private PreparedStatement pst;
	@SuppressWarnings("unused")
	private ResultSet rs;

	@SuppressWarnings("unused")
	private FileInputStream fis;
	@SuppressWarnings("unused")
	private int tamanho;

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JTextField txtbarcode;
	private JTextField txtcodigo;
	private JTextField txtproduto;
	private JTextField txtlote;
	private JTextField txtfabricante;
	private JTextField txtestoque;
	private JTextField txtestoquemin;
	private JTextField txtlocalarm;
	private JTextField txtfornecedor;
	private JTextField txtidfor;
	private JTextField txtcusto;
	private JTextField txtlucro;
	private JButton btnNewButton_2;
	private JButton btnNewButton_2_1;
	private JButton btnNewButton_2_1_1;
	private JButton btnNewButton_2_1_1_1;
	private JButton btnImagem;
	private JButton btnbuscarcod;
	private JButton btnbuscarfornecedor;
	@SuppressWarnings("rawtypes")
	private JComboBox cboUnidade;
	private JLabel lblfoto;
	private JScrollPane ScpDesc;
	private JTextArea txtDescricao;
	private JDateChooser dateVal;
	private JDateChooser dateEnt;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			Produtos dialog = new Produtos();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	@SuppressWarnings({ "rawtypes", "unchecked" })
	public Produtos() {
		setBounds(100, 100, 910, 601);
		getContentPane().setLayout(null);

		JLabel lblNewLabel = new JLabel("");
		lblNewLabel.setIcon(new ImageIcon(Produtos.class.getResource("/img/8541700_barcode_code_icon.png")));
		lblNewLabel.setBounds(22, 26, 48, 48);
		getContentPane().add(lblNewLabel);

		txtbarcode = new JTextField();
		txtbarcode.setBounds(76, 39, 339, 20);
		getContentPane().add(txtbarcode);
		txtbarcode.setColumns(10);

		JLabel lblNewLabel_1 = new JLabel("Código");
		lblNewLabel_1.setBounds(22, 90, 62, 14);
		getContentPane().add(lblNewLabel_1);

		txtcodigo = new JTextField();
		txtcodigo.setBounds(76, 87, 184, 20);
		getContentPane().add(txtcodigo);
		txtcodigo.setColumns(10);

		btnbuscarcod = new JButton("Pesquisar");
		btnbuscarcod.setFocusPainted(false);
		btnbuscarcod.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				buscarProduto();
			}
		});
		btnbuscarcod.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnbuscarcod.setBounds(270, 86, 134, 23);
		getContentPane().add(btnbuscarcod);

		JLabel lblNewLabel_2 = new JLabel("Produto");
		lblNewLabel_2.setBounds(22, 143, 52, 14);
		getContentPane().add(lblNewLabel_2);

		txtproduto = new JTextField();
		txtproduto.setBounds(76, 143, 339, 20);
		getContentPane().add(txtproduto);
		txtproduto.setColumns(10);

		JLabel lblNewLabel_3 = new JLabel("Lote");
		lblNewLabel_3.setBounds(40, 371, 44, 14);
		getContentPane().add(lblNewLabel_3);

		txtlote = new JTextField();
		txtlote.setBounds(76, 369, 114, 17);
		getContentPane().add(txtlote);
		txtlote.setColumns(10);

		JLabel lblNewLabel_4 = new JLabel("Descrição");
		lblNewLabel_4.setBounds(22, 206, 62, 14);
		getContentPane().add(lblNewLabel_4);

		ScpDesc = new JScrollPane();
		ScpDesc.setBounds(83, 206, 366, 140);
		getContentPane().add(ScpDesc);

		txtDescricao = new JTextArea();
		ScpDesc.setViewportView(txtDescricao);

		JLabel lblNewLabel_5 = new JLabel("Fabricante");
		lblNewLabel_5.setBounds(213, 368, 84, 14);
		getContentPane().add(lblNewLabel_5);

		txtfabricante = new JTextField();
		txtfabricante.setBounds(280, 368, 145, 18);
		getContentPane().add(txtfabricante);
		txtfabricante.setColumns(10);

		JLabel lblNewLabel_6 = new JLabel("Estoque");
		lblNewLabel_6.setBounds(22, 415, 52, 14);
		getContentPane().add(lblNewLabel_6);

		txtestoque = new JTextField();
		txtestoque.setBounds(76, 412, 80, 20);
		getContentPane().add(txtestoque);
		txtestoque.setColumns(10);

		JLabel lblNewLabel_7 = new JLabel("Estoque Mínimo");
		lblNewLabel_7.setBounds(195, 415, 107, 14);
		getContentPane().add(lblNewLabel_7);

		txtestoquemin = new JTextField();
		txtestoquemin.setBounds(292, 412, 75, 20);
		getContentPane().add(txtestoquemin);
		txtestoquemin.setColumns(10);

		JLabel lblNewLabel_8 = new JLabel("Unidade");
		lblNewLabel_8.setBounds(22, 510, 52, 14);
		getContentPane().add(lblNewLabel_8);

		cboUnidade = new JComboBox();
		cboUnidade.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		cboUnidade.setModel(new DefaultComboBoxModel(new String[] { "", "UN", "CX", "PC", "Kg", "m" }));
		cboUnidade.setBounds(76, 509, 80, 23);
		getContentPane().add(cboUnidade);

		JLabel lblNewLabel_9 = new JLabel("Local");
		lblNewLabel_9.setBounds(189, 513, 52, 14);
		getContentPane().add(lblNewLabel_9);

		txtlocalarm = new JTextField();
		txtlocalarm.setBounds(228, 510, 123, 22);
		getContentPane().add(txtlocalarm);
		txtlocalarm.setColumns(10);

		Panel panel = new Panel();
		panel.setBackground(UIManager.getColor("Button.light"));
		panel.setBounds(489, 42, 360, 52);
		getContentPane().add(panel);
		panel.setLayout(null);

		JLabel lblNewLabel_10 = new JLabel("Fornecedor");
		lblNewLabel_10.setBounds(10, 0, 71, 14);
		panel.add(lblNewLabel_10);

		txtfornecedor = new JTextField();
		txtfornecedor.setBounds(20, 21, 150, 20);
		panel.add(txtfornecedor);
		txtfornecedor.setColumns(10);

		JLabel lblNewLabel_11 = new JLabel("ID");
		lblNewLabel_11.setBounds(226, 24, 11, 14);
		panel.add(lblNewLabel_11);

		txtidfor = new JTextField();
		txtidfor.setBounds(247, 21, 86, 20);
		panel.add(txtidfor);
		txtidfor.setColumns(10);

		btnbuscarfornecedor = new JButton("");
		btnbuscarfornecedor.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnbuscarfornecedor.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnbuscarfornecedor.setBorderPainted(false);
		btnbuscarfornecedor.setFocusPainted(false);
		btnbuscarfornecedor.setBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null));
		btnbuscarfornecedor.setIcon(new ImageIcon(Produtos.class.getResource("/img/172546_search_icon.png")));
		btnbuscarfornecedor.setBounds(180, 21, 21, 21);
		panel.add(btnbuscarfornecedor);

		JLabel lblNewLabel_12 = new JLabel("Custo");
		lblNewLabel_12.setBounds(28, 466, 56, 14);
		getContentPane().add(lblNewLabel_12);

		txtcusto = new JTextField();
		txtcusto.setBounds(76, 466, 75, 20);
		getContentPane().add(txtcusto);
		txtcusto.setColumns(10);

		JLabel lblNewLabel_12_1 = new JLabel("Lucro");
		lblNewLabel_12_1.setBounds(181, 466, 46, 14);
		getContentPane().add(lblNewLabel_12_1);

		txtlucro = new JTextField();
		txtlucro.setColumns(10);
		txtlucro.setBounds(223, 463, 37, 20);
		getContentPane().add(txtlucro);

		JLabel lblNewLabel_13 = new JLabel("%");
		lblNewLabel_13.setFont(new Font("Tahoma", Font.BOLD, 11));
		lblNewLabel_13.setBounds(265, 463, 21, 20);
		getContentPane().add(lblNewLabel_13);

		JLabel lblNewLabel_14 = new JLabel("Entrada");
		lblNewLabel_14.setBounds(423, 412, 62, 14);
		getContentPane().add(lblNewLabel_14);

		JLabel lblNewLabel_15 = new JLabel("Validade");
		lblNewLabel_15.setBounds(423, 469, 62, 14);
		getContentPane().add(lblNewLabel_15);

		btnNewButton_2 = new JButton("");
		btnNewButton_2.setFocusPainted(false);
		btnNewButton_2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				cadprod();
			}
		});
		btnNewButton_2.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnNewButton_2.setBorder(null);
		btnNewButton_2.setIcon(new ImageIcon(Produtos.class.getResource("/img/add.png")));
		btnNewButton_2.setBounds(576, 476, 48, 48);
		getContentPane().add(btnNewButton_2);

		btnNewButton_2_1 = new JButton("");
		btnNewButton_2_1.setFocusPainted(false);
		btnNewButton_2_1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnNewButton_2_1.setBorder(null);
		btnNewButton_2_1.setIcon(new ImageIcon(Produtos.class.getResource("/img/edit.png")));
		btnNewButton_2_1.setBounds(653, 476, 48, 48);
		getContentPane().add(btnNewButton_2_1);

		btnNewButton_2_1_1 = new JButton("");
		btnNewButton_2_1_1.setFocusPainted(false);
		btnNewButton_2_1_1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnNewButton_2_1_1.setBorder(null);
		btnNewButton_2_1_1.setIcon(new ImageIcon(Produtos.class.getResource("/img/delete.png")));
		btnNewButton_2_1_1.setBounds(732, 476, 48, 48);
		getContentPane().add(btnNewButton_2_1_1);

		lblfoto = new JLabel("");
		lblfoto.setHorizontalAlignment(SwingConstants.CENTER);
		lblfoto.setIcon(new ImageIcon(Produtos.class.getResource("/img/photo.png")));
		lblfoto.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		lblfoto.setBounds(552, 110, 289, 280);
		getContentPane().add(lblfoto);

		btnImagem = new JButton("Carregar Imagem");
		btnImagem.setFocusPainted(false);
		btnImagem.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				carregarFoto();
			}
		});
		btnImagem.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnImagem.setBounds(624, 408, 134, 23);
		getContentPane().add(btnImagem);

		btnNewButton_2_1_1_1 = new JButton("");
		btnNewButton_2_1_1_1.setFocusPainted(false);
		btnNewButton_2_1_1_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				limpar();
			}
		});
		btnNewButton_2_1_1_1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
		btnNewButton_2_1_1_1.setBorder(null);
		btnNewButton_2_1_1_1.setIcon(new ImageIcon(Produtos.class.getResource("/img/eraser.png")));
		btnNewButton_2_1_1_1.setBounds(814, 476, 48, 48);
		getContentPane().add(btnNewButton_2_1_1_1);

		dateEnt = new JDateChooser();
		dateEnt.setBounds(383, 437, 123, 20);
		getContentPane().add(dateEnt);

		dateVal = new JDateChooser();
		dateVal.setBounds(383, 494, 123, 20);
		getContentPane().add(dateVal);
	}// fim do código

	private void limpar() {
		txtbarcode.setText(null);
		txtcodigo.setText(null);
		txtproduto.setText(null);
		txtDescricao.setText(null);
		lblfoto.setIcon(new ImageIcon(Produtos.class.getResource("/img/photo.png")));
		txtlote.setText(null);
		txtestoque.setText(null);
		txtcusto.setText(null);
		cboUnidade.setSelectedIndex(0);
		txtfabricante.setText(null);
		txtestoquemin.setText(null);
		txtlucro.setText(null);
		txtlocalarm.setText(null);
		dateEnt.setCalendar(null);
		dateVal.setCalendar(null);
		txtfornecedor.setText(null);
		txtidfor.setText(null);
	}
	
	
	private void buscarProduto() {
		String readCodigo = "select * from produtos where codigo = ?";
		try {
			con = dao.conectar();
			pst = con.prepareStatement(readCodigo);
			pst.setString(1, txtcodigo.getText());
			rs = pst.executeQuery();
			if(rs.next()) {
				txtbarcode.setText(rs.getString(2));
				txtproduto.setText(rs.getString(3));
				txtlote.setText(rs.getString(4));
				txtDescricao.setText(rs.getString(5));
				txtfabricante.setText(rs.getString(7));
				dateEnt.setDate(rs.getDate(8));
				dateVal.setDate(rs.getDate(9));
				txtestoque.setText(rs.getString(10));
				txtestoquemin.setText(rs.getString(11));
				cboUnidade.setSelectedItem(rs.getString(12));
				txtlocalarm.setText(rs.getString(13));
				txtcusto.setText(rs.getString(14));
				txtlucro.setText(rs.getString(15));
			} else {
				JOptionPane.showMessageDialog(null, "Produto não encontrado");
			}
			con.close();
		} catch (Exception e) {
			System.out.println(e);
		}
	}
	

	private void cadprod() {
		if (txtbarcode.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o Código de barras do produto!");
			txtbarcode.requestFocus();
		} else if (txtcodigo.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o Código do produto!");
			txtcodigo.requestFocus();
		} else if (txtproduto.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o Nome do produto!");
			txtproduto.requestFocus();
		} else if (txtDescricao.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha a Descrição do produto!");
			txtDescricao.requestFocus();
		} else if (txtlote.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o Lote do produto!");
			txtlote.requestFocus();
		} else if (txtestoque.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o Estoque do produto!");
			txtestoque.requestFocus();
		} else if (txtcusto.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o Custo do produto!");
			txtcusto.requestFocus();
		} else if (cboUnidade.getSelectedItem().equals("")) {
			JOptionPane.showMessageDialog(null, "Preencha a Unidade do produto!");
			cboUnidade.requestFocus();
		} else if (txtfabricante.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o Fabricante do produto!");
			txtfabricante.requestFocus();
		} else if (txtestoquemin.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o Estoque Mínimo do produto!");
			txtestoquemin.requestFocus();
		} else if (txtlucro.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o Lucro do produto!");
			txtlucro.requestFocus();
		} else if (txtlocalarm.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o Local de Armazenamento do produto!");
			txtlocalarm.requestFocus();
		} else if (txtfornecedor.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o Fornecedor do produto!");
			txtfornecedor.requestFocus();
		} else if (txtidfor.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Preencha o ID do Fornecedor do produto!");
			txtidfor.requestFocus();
		} else {
			String create = "insert into produtos (barcode, produto, lote, descricao, foto, fabricante, estoque, estoquemin, unidade, localarm, custo, lucro, idfor) values (?,?,?,?,?,?,?,?,?,?,?)";
			try {
				con = dao.conectar();
				pst = con.prepareStatement(create);
				pst.setString(1, txtbarcode.getText());
				pst.setString(2, txtproduto.getText());
				pst.setString(3, txtlote.getText());
				pst.setString(4, txtDescricao.getText());
				pst.setBlob(5, fis, tamanho);
				pst.setString(6, txtfabricante.getText());
				pst.setString(8, txtestoque.getText());
				pst.setString(9, txtestoquemin.getText());
				pst.setString(10, cboUnidade.getSelectedItem().toString());
				pst.setString(11, txtlocalarm.getText());
				pst.setString(12, txtcusto.getText());
				pst.setString(13, txtlucro.getText());
				pst.setString(14, txtidfor.getText());
				pst.executeUpdate();
				JOptionPane.showMessageDialog(null, "Produto Cadastrado!");
				limpar();
				con.close();
			} catch (Exception e) {
				System.out.println(e);
			}
		}
	}

	private void carregarFoto() {
		JFileChooser jfc = new JFileChooser();
		jfc.setDialogTitle("Selecionar Arquivo");
		jfc.setFileFilter(new FileNameExtensionFilter("Arquivo de imagens (*.PNG,*.JPG,*.JPEG)", "png", "jpg", "jpeg"));
		int resultado = jfc.showOpenDialog(this);
		if (resultado == JFileChooser.APPROVE_OPTION) {
			try {
				fis = new FileInputStream(jfc.getSelectedFile());
				tamanho = (int) jfc.getSelectedFile().length();
				Image foto = ImageIO.read(jfc.getSelectedFile()).getScaledInstance(lblfoto.getWidth(),
						lblfoto.getHeight(), Image.SCALE_SMOOTH);
				lblfoto.setIcon(new ImageIcon(foto));
				lblfoto.updateUI();
			} catch (Exception e) {
				System.out.println(e);
			}
		}
	}

}
